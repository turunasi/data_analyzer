//*************************************************************************************************************
//イニシャルプログラムのメモリに関する関数
//*************************************************************************************************************

//標準ライブラリのインクルード
#include<stdio.h>
#include<stdlib.h>

//-------------------------------------------------------------------------------------------------------------
//メモリ確保関数（unsigned int）
//-------------------------------------------------------------------------------------------------------------
void Reserve_Memory_Int(unsigned int	***data_i,		//バイナリデータ格納用配列
						unsigned int	ii,				//配列の行数		
						unsigned int	jj){			//配列の列数

	//変数宣言---------------------------------------------------------------------------------------
	unsigned int	j;			//列カウンタ

	//__メモリ確保------------------------------------------------------------------------------------
	*data_i = (unsigned int **)calloc(jj, sizeof(unsigned int *));
	for( j=0; j<jj; j++ ){
		(*data_i)[j] = (unsigned int *)calloc(ii, sizeof(unsigned int));
		if( (*data_i)[j]==NULL ){
			printf("\nメモリーが足りません。\n\a");
			while(1);
		}
	}

}

//-------------------------------------------------------------------------------------------------------------
//メモリ確保関数（double）
//-------------------------------------------------------------------------------------------------------------
void Reserve_Memory_Double(	double	***data_d,		//計算用配列0
							unsigned int		ii,				//配列の行数
							unsigned int		jj){			//配列の列数

	//変数宣言---------------------------------------------------------------------------------------
	unsigned int	j;			//列カウンタ


	//__メモリ確保-----------------------------------------------------------------------------------
	*data_d = (double **)calloc(jj, sizeof(double *));
	for(j=0; j<jj; j++){
		(*data_d)[j] = (double *)calloc(ii, sizeof(double));
		if( (*data_d)[j]==NULL ){
			printf("メモリーが足りません。\n\a");
			while(1);
		}
	}

}



//------------------------------------------------------------------------------------------------------------
//メモリ開放関数（unsigned int）
//------------------------------------------------------------------------------------------------------------
void Free_Memory_Int(	unsigned int	***data_i,		//バイナリデータ格納用配列
						unsigned int	jj){			//配列の列数
					
	//変数宣言---------------------------------------------------------------------------------------
	unsigned int	j;			//列カウンタ


	//__メモリ開放------------------------------------------------------------------------------------
	for( j=0; j<jj; j++ ){
		free( (*data_i)[j] );
	}
	free( *data_i );

}

	
//------------------------------------------------------------------------------------------------------------
//メモリ開放関数（double）
//------------------------------------------------------------------------------------------------------------
void Free_Memory_Double(double	***data_d,		//計算用配列
						unsigned int		jj){			//配列の列数
					
	//変数宣言---------------------------------------------------------------------------------------
	unsigned int	j;			//列カウンタ


	//____電圧変換後用0
	for( j=0; j<jj; j++ ){
		free( (*data_d)[j] );
	}
	free( *data_d );

}