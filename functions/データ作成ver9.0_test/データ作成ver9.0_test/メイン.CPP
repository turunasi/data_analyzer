//*************************************************************************************************************
//
//プログラム名：電圧→各値変換
//
//
//メイン関数への引数：
//	1:イニシャル番号1
//	2:イニシャル番号2
//	3:データ番号
//	4:グラフ作成用出力ファイルの出力開始回転数
//	5:グラフ作成用出力ファイルの出力回転数
//	6:グラフ作成用出力ファイルの出力スキップ数
//	7:大気圧[mmAq]
//	8:気温[℃]
//	9:イニシャルファイルの場所
//	10:入力ascファイルの場所
//	11:出力ファイルの場所
//	12:圧力センサ1Aの感度(エントラン)[mV/25PSI]
//	13:圧力センサ1Cの感度
//	14:圧力センサ1Eの感度
//	15:圧力センサ2Aの感度
//	16:圧力センサ2Cの感度
//	17:圧力センサ2Eの感度
//	18:圧力センサ3Aの感度
//	19:圧力センサ3Cの感度
//	20:圧力センサ3Eの感度
//	21:性能用圧力センサ感度(キュライト)[mV/1PSI]
//	22:熱線の感度3次
//	23:熱線の感度2次
//	24:熱線の感度1次
//	25:熱線の感度0次
//	26:流量校正式1次
//	27:流量校正式0次
//	28:タンク圧力センサ感度(キュライト)[mV/1PSI]
//
//（注意）ファイルの場所を入力する際はプログラムの仕様上、フォルダの区切りは「\」ではなく「/」を用いてください。			
//************************************************************************************************************

#pragma warning( disable: 4996 )       // コード先頭に記載

//----------------------------------------------------------------------------------------------------------------------
//ライブラリ、自作ヘッダのインクルード
//----------------------------------------------------------------------------------------------------------------------
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include "定数・構造体定義.h"		//自作ヘッダ
#include "自作関数定義.h"		//自作ヘッダ

//----------------------------------------------------------------------------------------------------------------------
//メイン関数
//----------------------------------------------------------------------------------------------------------------------

int main(int argc, char *argv[]){

	//変数宣言---------------------------------------------------------------------------------
	st_kojiku kojiku;		//「定数・構造体定義.h」で定義した「st_kojiku」型構造体の「kojiku」変数

	//コマンドラインからの引数を各変数に代入--------------------------------------------------------
	Substitution_CL( argv, &kojiku );

	//おまじない----------------------Open_File------------------------------------------------------------
	Omajinai( &kojiku );

	//単位変換・密度計算---------------------------------------------------------------------------------------
	Unit_Conversion( &kojiku );

	//ファイルオープン-----------------------------------------------------------------------------
	printf("＜実行状況＞\n");
	
	printf("\t入出力ファイルオープン中・・・\n");

	Open_File( &kojiku );
	FUJITAvoid( &kojiku );		//ランダム関数実行（ファイルNo.確認用）

	printf("");
	//イニシャル処理-------------------------------------------------------------------------------
	printf("\tイニシャルデータ入力中・・・\n");
	Read_File_Init( &kojiku );
	Read_P_Max_File( &kojiku );

	//バイナリデータ処理----------------------------------------------------------------------------------------
	//__メモリの確保
	printf("\tバイナリデータ用メモリ確保中・・・\n");
	Reserve_Memory_UInt_2D( &(kojiku.data.data_u), I, J );

	//__データ読み込み　ついでに行数も勘定
	printf("\tバイナリデータ読み込み中・・・\n");
	Read_File_Data( &kojiku );
	

	//__データ行数勘定
	Line( &kojiku );
	

	//__行数が分かったところで行数分のメモリ確保
	printf("\tメモリ確保中・・・\n");
	Reserve_Memory( &kojiku );
	

	//__データをバイナリから電圧値に変換
	printf("\tバイナリデータを電圧値に変換中・・・\n");
	Int_to_Double( &kojiku );
	//printf("sens_pspr=%f\n", kojiku->sens.pspr);

	//__バイナリデータ用メモリの開放
	printf("\tバイナリデータ用メモリ開放中・・・\n");
	Free_Memory_UInt_2D( &(kojiku.data.data_u), J );
	
	//動翼壁圧・非定常PQ計算-----------------------------------------------------------------------
	//__計算
	printf("\t電圧値を圧力・流速値にdododo計算中・・・\n");
	Calculation( &kojiku );

	//__ファイルに出力
	printf("\t生データをファイルに出力中・・・\n");
	Write_RawData( &kojiku );

	//FFT----------------------------------------------------------------------------------------
	//__FFT計算d
	printf("\tFFT計算中・・・\n");
	FFT( &kojiku );

	//__振幅スペクトル
	printf("\t振幅スペクトル計算中・・・\n");
	FFT_AmpSpec( &kojiku );
	Axis_AmpSpec( &kojiku );
	printf("\t振幅スペクトル出力中・・・\n");
	Write_AmpSpec( &kojiku );

	//指定周波数カット----------------------------------------------------------------------------
	printf("\t指定周波数除去中・・・\n");
	Cut_Freq_All( &kojiku );

	//IFFT----------------------------------------------------------------------------------------
	printf("\tIFFT計算中・・・\n");
	IFFT( &kojiku );

	//ファイルに出力------------------------------------------------------------------------------
	printf("\tフィルタをファイルに出力中・・・\n");
	Write_Filter( &kojiku );

	Cal_dpdt( &kojiku );
	Cal_dqdt( &kojiku );

	//メモリ開放----------------------------------------------------------------------------------
	printf("\tメモリ開放中・・・\n");
	Free_Memory( &kojiku );

	//ファイルクローズ-----------------------------------------------------------------------------
	printf("\t入出力ファイルクローズ中・・・\n");
	Close_File( &kojiku );
	
	//プログラム終了------------------------------------------------------------------------------------------
	printf("終了\n");
	//while(1);
	return(0);
}
